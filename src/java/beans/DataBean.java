/*
 * Feel free to edit, copy and reuse the resources
 * available in this project, unless you are going to use autogenerated
 * code where different licences might apply. It is your responsibility
 * to ensure that you posses the right to modify, copy or reuse such 
 * resources.
 */
package beans;

import java.beans.*;
import java.io.Serializable;
import java.sql.SQLException;
import java.util.Map;
import javax.annotation.ManagedBean;
import javax.enterprise.context.SessionScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ValueChangeEvent;
import javax.inject.Named;
import utilities.DataLink;

/**
 * This class provides methods that are used 
 * to communicate with the database.
 *
 * @author Lukasz Chlodnicki
 *
 */
@Named
@ManagedBean
@SessionScoped
public class DataBean implements Serializable
{

    private String queryResult;
    private String line;
    private String lineStatus;
    private String currentStatus;
    private String currLine = "";

    public String getCurrentStatus()
    {
        return currentStatus;
    }

    public void setCurrentStatus(String currentStatus)
    {
        this.currentStatus = currentStatus;
    }

    public String getLineStatus()
    {
        return lineStatus;
    }

    public void setLineStatus(String lineStatus)
    {
        this.lineStatus = lineStatus;
    }

    public String getLine()
    {
        return line;
    }

    public void setLine(String line)
    {
        this.line = line;
    }

    public PropertyChangeSupport getPropertySupport()
    {
        return propertySupport;
    }

    public void setPropertySupport(PropertyChangeSupport propertySupport)
    {
        this.propertySupport = propertySupport;
    }

    public String getQueryResult()
    {
        return queryResult;
    }

    public void setQueryResult(String queryResult)
    {
        this.queryResult = queryResult;
    }

    private PropertyChangeSupport propertySupport;

    public DataBean()
    {
        propertySupport = new PropertyChangeSupport(this);
    }

    public String getCurrLine()
    {
        return currLine;
    }

    public void setCurrLine(String currLine)
    {
        this.currLine = currLine;
    }

    /**
     * Method that retrieves the current line's status from the database.
     *
     * @param lineNumber the production line number
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public void updateLineStatus(String lineNumber) throws ClassNotFoundException, SQLException
    {
        DataLink dl = new DataLink();
        String g = dl.conditionalSearch("line", "line_id", lineNumber,
                "line_status");
        this.setLineStatus(g);
        this.setLine(lineNumber);

    }

    /**
     * This method updates the currently selected line
     *
     * @return selected line
     */
    public String updateCurrentLine()
    {
        FacesContext fc = FacesContext.getCurrentInstance();
        Map<String, String> params
                = fc.getExternalContext().getRequestParameterMap();
        this.setCurrLine(params.get("line"));
        return this.getCurrLine();
    }

    /**
     * This method is associated with the value change listener it calls other
     * methods to populate attributes with the new value.
     *
     * @param vcl
     * @throws ClassNotFoundException
     * @throws SQLException
     */
    public void lineChanged(ValueChangeEvent vcl) throws ClassNotFoundException, SQLException
    {
        this.updateLineStatus("" + vcl.getNewValue());
        this.setCurrentStatus(this.getLineStatus());
        this.updateCurrentLine();
    }

}
